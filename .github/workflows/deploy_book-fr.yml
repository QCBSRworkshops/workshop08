on:
  push:
     branches:
       - main
     paths:
       - book-fr/**
  repository_dispatch: 
    types: [pong_book]

name: render-book-fr

jobs:
  repository-dispatch-received:
    name: Dispatch received - starting all jobs here
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
          
      - name: Acknowledge - dispatch response to received pong
        if: github.event.action == 'pong_book'
        run: |
          curl -X POST https://api.github.com/repos/QCBSRworkshops/templateWorkshops/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "acknowledged_book_fr", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
          
  book-fr-job:
    name: Render the book for this workshop in bookdown
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: book-fr
        
    steps:
      - name: üõéÔ∏è Checkout repository
        uses: actions/checkout@v2

      - name: üíª Setup R
        uses: r-lib/actions/setup-r@v1
        
      - name: üíæ Cache R packages
        uses: actions/cache@v2 # Must be v2 so it accepts the GITHUB_REF from the repository_dispatch
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  r-${{ hashFiles('DESCRIPTION') }}

      - name: üíª Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@v1
    
      - name: üíª Install R packages and dependencies if needed
        run: |
          Rscript -e 'list.of.packages <- c("rmarkdown", "bookdown", "formatR"); 
          new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]; 
          if(length(new.packages) > 0) {  
          install.packages(new.packages, dependencies = TRUE)   
          print(paste0("The following package was installed:", new.packages))} else 
          if(length(new.packages) == 0) {
          print("All packages have been previously installed and fetched from cache.")}'
          
      - name: üß∂ Render the book using bookdown
        run: Rscript -e 'bookdown::render_book("index.Rmd")'
        
      - name: üî∫ Upload artifact containing the book
        uses: actions/upload-artifact@v1
        with:
          name: book-fr
          path: book-fr/
  
# Need to first create an empty gh-pages branch
# see https://pkgdown.r-lib.org/reference/deploy_site_github.html
# and also add secrets for an ACCESS_TOKEN

  checkout-and-deploy:
   name: Checkout and deploy the book within the gh-pages repository
   runs-on: ubuntu-latest
   needs: book-fr-job
   
   steps:
      - name: üõéÔ∏è Checkout again
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false
          
      - name: üîª Download artifact containing the book
        uses: actions/download-artifact@v1
        with:
         # Artifact name
         name: book-fr # optional
         # Destination path
         path: book-fr/ # optional

      - name: üíé Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: book-fr/_book/
          TARGET_FOLDER: book-fr # The folder the action should deploy
          CLEAN: true
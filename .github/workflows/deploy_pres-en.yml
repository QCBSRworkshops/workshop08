on:
  push:
    branches:
      - main
    paths:
      - pres-en/**
      - .github/workflows/deploy_pres-en.yml
       
  repository_dispatch: 
    types: [pong_presentation]
  
name: render-presentation-en

jobs:
  repository-dispatch-received:
    name: Dispatch received - starting all jobs here
    runs-on: ubuntu-latest
    steps:
      - name: Event Information
        run: |
          echo "Event '${{ github.event.action }}' received from '${{ github.event.client_payload.repository }}'"
          
      - name: Acknowledge - dispatch response to received pong
        if: github.event.action == 'pong_presentation'
        run: |
          curl -X POST https://api.github.com/repos/QCBSRworkshops/templateWorkshops/dispatches \
          -H 'Accept: application/vnd.github.everest-preview+json' \
          -u ${{ secrets.ACCESS_TOKEN }} \
          --data '{"event_type": "acknowledged_presentation_en", "client_payload": { "repository": "'"$GITHUB_REPOSITORY"'" }}'
          
  presentation-en-job:
    name: Render the presentation for this workshop
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: pres-en
        
    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v3

      - name: 💻 Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 4.2.2
        
      - name: 💾 Cache R packages
        uses: actions/cache@v3
        with:
          path: ${{ env.R_LIBS_USER }}
          key:  r-${{ hashFiles('DESCRIPTION') }}

      - name: 💻 Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@v2
    
      - name: 💻 Install R packages and dependencies if needed
        run: |
          Rscript -e 'list.of.packages <- c("rmarkdown", "xaringan"); 
          new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]; 
          if(length(new.packages) > 0) {  
          install.packages(new.packages, dependencies = TRUE)   
          print(paste0("The following package was installed:", new.packages))} else 
          if(length(new.packages) == 0) {
          print("All packages have been previously installed and fetched from cache.")}'
                  
      - name: 🧶 Render presentation
        run: Rscript -e 'rmarkdown::render("workshop08-pres-en.Rmd")'

      - name: 📜 Create script using purl
        run: |
         Rscript -e 'knitr::purl("workshop08-pres-en.Rmd",documentation = 0,output = "workshop08-script-en.R");
         script <- readLines("workshop08-script-en.R");
         script <- gsub("## ", "", script);
         script <- script[-(1:12)];
         write(script, file = "workshop08-script-en.R");
         file.copy("workshop08-script-en.R", "_pres/")'

      - name: 🔺 Upload artifact containing the presentation
        uses: actions/upload-artifact@v3
        with:
          name: pres-en
          path: pres-en/
  
# Need to first create an empty gh-pages branch
# see https://pkgdown.r-lib.org/reference/deploy_site_github.html
# and also add secrets for an ACCESS_TOKEN

  checkout-and-deploy:
   name: Checkout and deploy the presentation within the gh-pages repository
   runs-on: ubuntu-latest
   needs: presentation-en-job
   
   steps:
      - name: 🛎️ Checkout again
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          
      - name: 🔻 Download artifact containing the presentation
        uses: actions/download-artifact@v3
        with:
         # Artifact name
         name: pres-en # optional
         # Destination path
         path: pres-en/ # optional

      - name: 💎 Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          branch: gh-pages # The branch the action should deploy to.
          folder: pres-en/
          target-folder: pres-en # The folder the action should deploy
          clean: true
